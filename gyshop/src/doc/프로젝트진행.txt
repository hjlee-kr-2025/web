풀스택 프로젝트
- 백엔드: JAVA Servlet 기반으로 작성
- 프런트: JSP (Java Server Page) - 문법은 HTML과 같습니다.
- 화면에 어떠한 내용을 보여줄 것인가?
1. 회원관리(가입/탈퇴, 로그인)
2. 회원등급
3. 게시판
	- 일반게시판 (비회원도 글쓰기가 가능합니다)
	- 공지사항 (글쓰기는 관리자만)
	- 이미지(사진)게시판 (글쓰기는 회원만 가능하도록)
	- 상품 판매 게시판
	- Q & A
	- 모든 게시글 댓글
	- 댓글에 답변까지

	<< 요구사항 정의서 >>
******* 회원 등급 *******
1. 회원등급 리스트
	- 누가 : 관리자
	- 언제 : 회원등급 메뉴를 클릭하면
	- 어디서(데이터를 어디서) : 회원등급테이블 (grade) 
	- 무엇을 : 등급번호(PK), 등급명   +  (등급 회원 인원수)
				* 등급번호 : 숫자 2자리 구성 : 1-99 까지 사용가능
				* 등급명 : 일반회원(1), 관리자(99) - 한글 10자까지
	- 어떻게 : DB에서 데이터를 가져와서 리스트로 보여줍니다. 순서 : 등급번호순
	- 왜 : 등록된 등급번호와 등급명을 알기 위해서 
2. 회원등급 등록
	- 누가 : 관리자
	- 언제 : 회원등급 리스트에서 등록버튼을 클릭하면
	- 무엇을 : 등급번호, 등급명을 입력받아서
				* 등급번호 : 숫자 2자리
				* 등급명 : 한글 10자
				* 기본데이터 : 1 - 일반회원, 99 - 관리자
	- 어떻게 : 회원등급리스트에서 모달창을 열어서, 폼으로 데이터를 입력받아
				등록버튼을 누리면 DB에 등록하고 "등급명이 등록되었습니다." 메시지 출력
				회원등급리스트 페이지 update
	- 왜 : 회원등급을 DB(grade 테이블)에 저장하기 위해
3. 회원등급 수정
	- 누가 : 관리자
	- 언제 : 회원등급리스트의 데이터에서 수정버튼을 클릭	
	- 무엇을 : 등급명을 수정할 수 있습니다.
	- 어떻게 : 모달창을 열어서, 폼으로 데이터를 수정하여 수정버튼을 누르면,
				DB에 수정되고, "(변경전 등급명)이 (변경후 등급명)으로 변경되어습니다."
	- 왜 : 관리자가 등급명을 수정하기 위해
4. 회원등급 삭제
	- 누가 : 관리자
	- 언제 : 회원등급리스트의 데이터에서 삭제버튼을 클릭
	- 무엇을 : 등급번호
	- 어떻게 : 모달창에 삭제확인메시지 "등급명을 삭제하시겠습니까?"
				를 보여주고, 삭제버튼클릭시 DB에서 데이터를
				삭제하고, "등급명이 삭제되었습니다" 메시지 표시
	- 왜 : grade 테이블에서 등급번호와 등급명 (데이터) 삭제하기 위해서
	
******* 회원 정보 *******
-- 회원정보테이블(member)에 저장될 내용입니다.
아이디, 패스워드, 이름, 성별, 생년월일, 연락처, 우편번호, 주소, 상세주소,
이메일, 가입일, 최근접속일, 사진, 회원상태, 등급번호	
1. 회원리스트
	- 누가 : 관리자
	- 언제 : 회원관리 메뉴 클릭시	
	- 어디서 : DB의 member 테이블과 grade 테이블 에서
	- 무엇을 : 아이디, 이름, 성별, 생년월일, 연락처, 회원상태, 최근접속일, 사진, 회원등급명
					최근접속일 (YYYY-MM-DD)
	- 어떻게 : - DB에서 데이터를 가져와서 리스트 출력, 아이디순 또는 이름순
						- 회원상태는 checkbox를 활용해 check된 회원상태만 리스트로 출력
						- 로그인한 관리자는 리스트에서 제외한다.
						- 페이지처리를 합니다. 10개를 기본, 15, 20, 25개 변경가능
						- 오름차순/내림차순 변경가능하도록	
	- 왜 : 회원 리스트를 확인하기
2. 회원정보보기(관리자) 또는 내정보보기(관리자/일반회원)
	- 누가 : 관리자, 일반회원
	- 언제 : 관리자 - 회원리스트에서 표시된 데이터를 클릭했을때
					일반회원(관리자) - 내 정보보기 메뉴 클릭시
	- 무엇을 : 아이디, 이름, 성별, 생년월일, 연락처, 우편번호, 주소, 상세주소,
					이메일, 가입일, 최근접속일, 사진, 회원상태, 등급명,
					생년월일, 가입일, 최근접속일 (YYYY-MM-DD)
	- 어떻게 : DB에서 가져온 데이터를 상세보기로 출력
					* 일반회원 : 내정보보기
					* 관리자 : 회원정보보기
3. 회원가입
	- 누가 : 일반회원 
	- 언제 : 회원가입 메뉴를 클릭했을 때
	- 무엇을 : 아이디, 패스워드, 패스워드확인, 이름, 성별, 생년월일, 연락처,
					우편번호, 주소, 상세주소,
					이메일, 사진을 등록합니다.
					* 아이디 : 영어,숫자 3~20자 (중복체크버튼클릭시 중복되지않으면 버튼비활성화)
					* 패스워드 : 모든문자가능, 5~20자
					* 패스워드확인 : 패스워드와 동일구성
					* 이름 : 한글기준 2자이상 ~ 10자
					* 성별 : 라디오버튼으로 선택합니다. 남자/여자
					* 생년월일 : YYYY-MM-DD
					* 연락처 : xxx-xxxx-xxxx 로 구성
					* 우편번호/주소 : API사용해서 주소검색후 구성
					* 상세주소 : 입력창이용
					* 이메일 : 이메일형식을 사용
					* 사진 : 이미지(사진)를 선택해 입력받습니다. - 필수입력을 아님
	- 어떻게 : 필수입력 - 아이디, 패스워드, 패드워드확인, 이름, 성별, 생년월일, 이메일
					* 아이디 중복체크는 버튼으로 합니다.
					* 비밀번호와 비밀번호확인은 실시간으로 같은것을 체크
					* 생일은 달력을 이용해서 입력합니다.
					* 사진을 선택하면 미리보기가 되도록 합니다.
					* 가입버튼은 아이디 중복확인을 종료하고, 
						비밀번호와 비밀번호확인이 같을때 진행합니다.
					* 다시쓰기버튼(type="reset") 초기화
					* 취소버튼은 이전메뉴로 돌아갑니다.
	- 왜 : 일반사용자가 웹페이지를 자유롭게 사용하기 위해서
4.회원정보수정
	- 누가 : 일반회원 / 관리자 - 자기자신것만 수정
	- 언제 : 내 정보보기에서 수정버튼클릭시
	- 무엇을 : 아래내용을 수정할 수 있도록 구성합니다.
					* 아이디는 수정은 불가하지만 화면에는 보여줍니다.
					* 이름 : 한글기준 2자이상 ~ 10자
					* 성별 : 라디오버튼으로 선택합니다. 남자/여자
					* 생년월일 : YYYY-MM-DD
					* 연락처 : xxx-xxxx-xxxx 로 구성
					* 우편번호/주소 : API사용해서 주소검색후 구성
					* 상세주소 : 입력창이용
					* 이메일 : 이메일형식을 사용
					* 사진은 별도의 수정버튼을 활용하여 변경가능하도록 합니다.
					* 수정내용을 기록한후 패스워드와 패스워드 확인을 적은후 수정될 수 있도록합니다.
	- 어떻게 : 폼태그를 이용해서 수정데이터를 입력받은 후 패스워드,패드워드확인 기록후
					수정버튼클릭 -> DB에 수정하고 -> "회원정보가 수정되었습니다" 메시지 보여줌
					수정에 실패하면 "회원정보 수정에 실패하였습니다. 정보확인후 다시 시도해주세요."
					- "reset"버튼 - 수정 전 정보로 초기화
					- "취소"버튼 - 이전화면으로 돌아감
	- 왜 : 회원이 자신의 정보를 수정하기 위해
5. 비밀번호변경
	- 누가 : 일반회원/관리자 - 자신의 비밀번호만 수정가능
	- 언제 : 내정보보기 - 비밀변호변경 버튼 클릭시	
	- 무엇을 : 현재비밀번호, 바꿀비밀번호, 바꿀비밀번호확인
				* 비밀번호 : 모든문자가능, 5~20자
	- 어떻게 : 폼태그 활용해서
				* 바꿀비밀번호와 바꿀비밀번호확인은 같은지 check
				* 수정버튼클릭 -> DB수정 -> "비밀번호가 변경되었습니다." 메시지
				* 변경되지 않았으면
				 "비밀번호가 변경되지 않았습니다. 정보를 확인후 다시 시도해 주세요"
	- 왜 : 회원이 비밀번호를 변경하려고
6. 사진변경
  - 누가 : 일반회원/관리자 - 자신의 사진만
  - 언제 : 내 정보보기 - 사진 클릭시
  - 무엇을 : 아이디 / 사진을 보여주고 변경할 수 있도록 구성
  - 어떻게 : 사진 - 선택, 변경, 삭제 버튼이 존재
  				* 선택을 누르면 변경할 사진을 선택할 수있도록합니다.
  				* 변경을 누르면 사진을 업로드 하고 DB에 사진의 경로를 update한 후 
  					"사진이 변경되었습니다." 메시지 출력 -> 이전 사진은 삭제합니다.
  				* 삭제버튼을 누르면 DB에 사진경로를 초기화(기본이미지경로)하고
  				  "사진이 삭제되었습니다." 메시지 출력 -> 기존 사진은 삭제합니다.
7. 로그인
	- 누가 : 일반회원/관리자
	- 언제 : 메인화면에서 로그인버튼 클릭시, 로그인이 필요한 화면에 접근시
	- 무엇을 : 아이디와 비밀번호
	- 어떻게 : 아이디와 비밀번호 입력후 로그인버튼을 클릭하면
					* 회원정보가 맞으면 "***님으로 로그인 되었습니다. 즐거운 시간되세요."
						메시지 출력
					* 회원정보가 맞지않으면
						"로그인에 실패하였습니다. 아이디와 패스워드확인후 다시 시도해 주세요."
						메시지 출력
	- 왜 : 로그인이 필요한 화면을 사용하고자 할 때
8. 로그아웃
	- 누가 : 일반회원/관리자
	- 언제 : 메인화면에서 로그아웃버튼 클릭시
	- 무엇을 : 별도의 화면은 없습니다.
	- 어떻게 : 로그아웃 버튼을 클릭하면 "로그아웃되었습니다. 즐거운하루되세요."
					메시지 출력
	- 왜 : 회원이 로그아웃을 원해서
9. 아이디 찾기
	- 누가 : 일반회원
	- 언제 : 로그인화면에서 아이디찾기 버튼 클릭시
	- 무엇을 : 이메일, 이름, 생년월일	입력받도록 구성합니다.
	- 어떻게 : 이메일, 이름, 생년월일로 아이디를 찾아서 화면에 보여줍니다.
	- 왜 : 회원이 아이디를 잊어버려서.
10. 비밀번호 찾기
	- 누가 : 일반회원
	- 언제 : 로그인화면에서 비밀번호찾기 버튼 클릭시
	- 무엇을 : 아이디, 이메일, 이름, 생년월일 입력시
	- 어떻게 : 아이디, 이메일, 이름, 생년월일로 비밀번호를 찾아서 화면에 보여줍니다.
	- 왜 : 회원이 비밀번호를 잊어버려서
11. 회원등급변경
	- 누가 : 관리자
	- 언제 : 회원관리리스트에서 등급변경클릭시
	- 무엇을 : 회원등급 선택을 드랍다운 메뉴로 구성
	- 어떻게 : 회원등급 변경후 등급변경클릭 -> "회원등급이 변경되어습니다." 메시지 출력
	- 왜 : 관리자가 회원의 등급을 변경하기 위해
12. 탈퇴(회원상태변경)
	- 누가 : 일반회원
	- 언제 : 로그인한 화면에서 회원탈퇴를 클릭시
	- 무엇을 : 아이디와 이메일은 화면에 보여주고, 비밀번호 입력하는 창을 보여줍니다.
	- 어떻게 : 비밀번호 입력후 탈퇴 클릭시, 팝업창으로 "탈퇴하시겠습니까?" 확인메시지
				를 화면에 보여준후, [예] 버튼 클릭시 회원상태를 "탈퇴"로 변경
				변경후 -> "탈퇴되었습니다." 메시지 보여주고, 로그아웃상태로 변경함
	- 왜 : 일반회원이 사이트를 탈퇴하기 위해
13. 회원상태변경
	- 누가 : 관리자
	- 언제 : 회원관리리스트에서 회원상태변경클릭
	- 무엇을 : 회원관리 선택을 드랍다운 메뉴로 구성
	- 어떻게 : 회원상태 변경후 변경버튼클릭 -> "회원상태가 변경되었습니다" 메시지 출력
	- 왜 : 회원상태를 변경하기 위해
	
******* 공지사항 ******* 
1. 공지리스트
	- 누가 : 일반사용자 (로그인 안 한 사용자로 볼 수 있습니다)
	- 언제 : 공지사항 메뉴클릭시
	- 어디서 : DB의 공지사항(notice) 테이블에서 
	- 무엇을 : 번호, 제목, 공지시작일, 공지종료일
					* 제목이 길이지면 말줄임표 사용
					* 공지시작일, 공지종료일 : YYYY-MM-DD
	- 어떻게 	:
					* DB에서 가져온 데이터를 리스트로 출력
					* 공지시작일이 최근인 것 / 공지종료일이 임박한 것
					* 제목 / 내용을 검색할 수 있도록
					* 한 페이지에 기본 10개, 15, 20, 25개 선택할 수 있도록 구성
	- 왜 : 공지사항이 어떤것이 있는지 확인하기 위해
2. 공지사항 상세보기
	- 누가 : 일반사용자
	- 언제 : 공지사항리스트에서 해당공지 클릭시 
	- 무엇을 : 번호, 제목, 이미지, 내용, 공지시작일, 공지종료일, 작성일
					* 내용은 줄바꿈처리
					* 공지시작일, 공지종료일, 작성일 : YYYY-MM-DD
	- 어떻게 : DB에서 번호를 가지고 공지사항 데이터를 가져온 후
					 상세페이지에 내용을 보여줍니다.
	- 왜 : 공지내용을 상세하게 확인하기 위해서
3. 공지사항 등록
	- 누가 : 관리자
	- 언제 : 공지사항 리스트에서 등록버튼 클릭시
				(등록버튼은 관리자로 로그인할때만 나타납니다)
	- 무엇을 : 제목, 이미지, 내용, 공지시작일, 공지종료일
					- 제목 : 한글 100자 까지
					- 내용 : 한글 1000자 까지
	- 어떻게 : 
				* 관리자가 폼태그를 이용해 내용을 입력
				* 이미지는 필수입력은 아니며 필요시 사용
				* 공지시작일, 공지종료일은 달력에서 클릭
				 - 공지시작일은 오늘부터 선택가능
				 - 공지종료일은 공지시작일 부터 선택가능
				* 등록버튼을 클릭하고 -> DB에 저장하고
				 -> "공지사항이 등록되었습니다" 메시지출력
				* "Reset", "취소" 버튼 사용
	- 왜 : 공지사항을 등록하기 위해
4. 공지수정
	- 누가 : 관리자
	- 언제 : 공지상세보기 수정버튼 클릭시
	- 무엇을 : 제목, 내용, 공지시작일, 공지종료일 을 수정할 수 있도록 세팅
				 * 이미지는 별도로 처리
	- 어떻게 : 내용 수정 후 -> DB 에 수정된 내용 저장
						-> "공지사항이 수정되었습니다." 메시지 출력
	- 왜 : 공지사항 내용 수정을 위해서			 
5. 공지이미지수정 / 등록
	- 누가 : 관리자
	- 언제 : 공지상세보기에서 이미지가 있으면 이미지클릭, 없으면 이미지등록버튼 클릭
	- 무엇을 : 바꿀이미지 선택, 수정 또는 등록버튼
	- 어떻게 : 수정 또는 등록버튼 클릭 -> DB에 수정(등록)된 이미지 경로 저장
					-> 이미지 upload -> "이미지가 등록(수정) 되었습니다." 메시지 출력
					-> 수정에서는 기존이미지 삭제
	- 왜 : 기존 공지사항의 이미지를 수정하거나 등록할 때
6. 공지 삭제
	- 누가 : 관리자
	- 언제 : 공지상세보기에서 삭제버튼 클릭시
	- 무엇을 : 삭제버튼 클릭시 확인메세지
	- 어떻게 : 확인메세지에서 예 클릭시 -> 이미지가 있으면 이미지도 삭제  
				 ->	DB에서 데이터 삭제 -> "공지가 삭제되었습니다." 메시지 출력  				 	
	- 왜 : 공지를 삭제하려고

******* 이미지게시판 ******* (1장기준 - 여러개필요서 사이트업데이트)
1. 이미지 리스트
	- 누가 : 일반 사용자
	- 언제 : 메인메뉴에서 이미지게시판 클릭시
	- 어디서 : DB의 imageboard, image, member 테이블에서 데이터를 가져와서
	- 무엇을 : 
				* 글번호, 이미지, 제목, 작성자, 작성일, 조회수 을 리스트로 보여줍니다.
				* 작성일 패턴 : YYYY-MM-DD
	- 어떻게 : 
				* DB에서 데이터를 가져옵니다.
				* 정렬기준을 선택하도록 합니다.
					- 최근글이 위에 오도록 배치 (order by 글번호 desc)
					- 조회수 많은 / 조회수 적은 / 최근글 / 오래된 순
				* 이미지 갤러리 형식으로 보여주고, 한줄에 3개, 6개를 기본
					9, 12개 선택할 수 있도록 구성합니다.
				* 검색 : 제목, 내용, 작성자
	- 왜 : 이미지 리스트를 확인하기 위해
2. 이미지 상세보기
	- 누가 : 회원
	- 언제 : 이미지게시판에서 리스트 클릭시
	- 무엇을 : 번호, 제목, 이미지, 내용, 작성자, 작성일, 조회수
	- 어떻게 :
				* 로그인이 안되어있으면 로그인 하도록 합니다.
				* DB에서 데이터를 가져와서 상세보기 처리합니다.
				* 다운로드 불가
				* 이미지에서 오른쪽 마우스 사용불가
				* 이미지 클릭시 원본이미지 보여주도록
	- 왜 : 이미지 원본을 보고싶어서			 				
3. 이미지 등록
	- 누가 : 회원
	- 언제 : 이미지 게시판에서 등록버튼 클릭시
	- 무엇을 : 제목, 내용, 이미지를 입력합니다.
				* 제목 : 한글기준 2~100자
				* 내용 : 한글기준 1000자
				* 3가지 항목은 필수 입력
	- 어떻게 :
				* 로그인이 안되어있으면 로그인 화면으로 갑니다.
				* 이미지 : 미리보기 제공, 확장자, size를 확인할 수 있도록 구성합니다.
				* 등록버튼을 눌러 DB에 저장하고 --> 리스트페이지로 이동합니다.
				* "새로운 이미지가 등록되었습니다." 메시지 출력
				* "Reset", "취소" 버튼도 제공
	- 왜 : 이미지를 게시판에 등록하기 위해
4. 이미지 변경
	- 누가 : 회원 (등록한 본인)
	- 언제 : 이미지 상세보기에서 이미지클릭시 (본인인 경우만 변경할 수 있도록 합니다)
	- 무엇을 : 바꿀이미지를 선택
	- 어떻게 : 변경 버튼 클릭시 선택한 이미지를 upload하고
				-> DB에 새로운이미지 경로로 수정 -> 이전 이미지 삭제
				-> "이미지가 변경되었습니다" 메시지 출력
	- 왜 : 이미지를 변경하기 위해
5. 이미지 정보 변경
	- 누가 : 회원 (등록한 본인)
	- 언제 : 이미지 상세보기에서 정보변경 버튼 클릭시 (본인일 경우만 버튼 생성)
	- 무엇을 : 제목, 내용
	- 어떻게 : 제목, 내용 수정후 수정버튼 클릭시 -> DB에 자료 update
					-> "게시글이 수정되었습니다." 메시지 출력
	- 왜 : 이미지 정보를 변경하기 위해			
6. 이미지 삭제
	- 누가 : 회원 (등록한 본인) / 관리자
	- 언제 : 이미지 상세보기에서 삭제버튼 클릭시
	- 무엇을 : 팝업창을 띄어서 삭제여부 물어서 실행
	- 어떻게 : 삭제버튼클릭 -> 팝업창에 "삭제하시겠습니까?" 예 클릭하면
					-> DB에 정보삭제 -> 이미지삭제
					-> "이미지가 삭제되었습니다." 메시지 출력
	- 왜 : 회원은 자신의 글 삭제, 관리자는 부절절한 글 삭제

******* 일반 게시판 *******
1. 게시판 리스트
	- 누가 : 일반 사용자
	- 언제 : 메인페이지에서 일반게시판 클릭시
	- 어디서 : DB에서 board 테이블의 내용을 가져옵니다.
	- 무엇을 : 번호, 제목, 작성자, 작성일, 조회수  +  댓글수(댓글 구성이 끝나고 추가)
	- 어떻게 : 
				* DB에서 일반게시판 리스트를 가져와서
				* 기본은 최근작성글 부터 보여줍니다.
						- 최근작성 / 오래된 순 / 조회수 많은 / 조회수 적은
				* 제목, 내용, 작성자 로 검색할 수 있도록 구현
				* 한페이지에 10개를 기본, 15, 20, 25 개 선택옵션부여
	- 왜 : 일반게시판의 글 리스트를 보기 위해서
2. 게시판 글보기
	- 누가 : 일반 사용자
	- 언제 : 게시판 리스트에서 해당글 클릭시
	- 무엇을 : 번호, 제목, 내용, 작성자, 작성일, 조회수 를 보여줍니다.
				* 작성일 : YYYY-MM-DD
	- 어떻게 :
				* DB에서 해당글번호로 데이터를 가져옵니다.
				* 가져오기전 조회수를 먼저 1증가 시킵니다.
	- 왜 : 일반 게시글의 내용을 살펴보기 위해
3. 게시판 글등록
	- 누가 : 일반 사용자
	- 언제 : 리스트에서 글등록 버튼 클릭시
	- 무엇을 : 제목, 내용, 작성자, 비밀번호, 비밀번호확인
				* 제목 : 한글 2~100자
				* 내용 : 한글 1000자						 
				* 이름 : 한글 2~10자
				* 비밀번호, 비밀번호확인 : 4~20자
	- 어떻게 : 폼태그이용 제목, 내용, 작성자, 비밀번호, 비밀번호확인 입력후
				---> 등록버튼 클릭하여 ---> DB에 저장
				---> 일반게시판 리스트로 페이지 이동	 
				---> "새로운 글이 등록되었습니다." 메시지 출력
	- 왜 : 일반 게시판에 글을 등록하기 위해
4. 게시판 글수정
	- 누가 : 일반 사용자 (본인글 - 비밀번호로 확인)
	- 언제 : 상세보기 화면에서 수정버튼 클릭시
	- 무엇을 : 제목, 내용, 작성자
	- 어떻게 : 수정내용입력 후 비밀번호/비밀번호 확인을 입력할 수 있는 팝업창 띄움
				--> 수정버튼 클릭하면 --> 비밀번호 체크후 DB 데이터 수정
				--> 수정되었으면 ==> "게시글이 수정되었습니다." 메시지 출력 ==> 상세글보기 화면
				--> 수정이 안되었으면 ==> "게시글이 수정되지 않았습니다. 비밀번호를 확인하세요"
				메시지출력 ==> 수정화면에서 대기
	- 왜 : 게시글을 수정하기 위해서
5. 게시판 글삭제
	- 누가 : 일반 사용자 / 관리자
	- 언제 : 상세보기 화면에서 삭제버튼 클릭시
	- 무엇을 : 비밀번호 입력할 수 있는 팝업창
	- 어떻게 :
				일반사용자) 삭제버튼 ==> 비밀번호/비밀번호 입력 팝업창 ==> DB삭제
							-> 삭제되면 -> "삭제되었습니다." 메시지  ---> 리스트
							-> 삭제되지 않으면 --> "삭제되지 않았습니다." 메시지 ---> 상세보기화면
				관리자) 삭제버튼 ==> 삭제확인 메시지 ==> DB삭제
				 			=> "삭제되었습니다." 메시지 출력
	- 왜 : 일반게시판의 게시글 삭제를 위해서

******* 일반게시판 댓글 *******
1. 리스트
	- 누가 : 일반 사용자
	- 언제 : 일반게시판 글 상세보기 시
	- 어디서 : DB에서 댓글 테이블에서 (board_reply) + member
	- 무엇을 : 해당글의 댓글 전부를 가져와서 상세글 하단에 리스트로 보여줍니다.
	- 어떻게 : DB에서 일반게시글번호로 댓글 데이터를 전부 가져옵니다.
					-> 리스트로 하단에 보여줍니다. 최신 댓글을 먼저 보여줍니다.
					-> 댓글의 댓글을 해당댓글 아래로 보여줍니다.
					-> 10개씩 기본 : 5, 15, 20개 선택
	- 왜 : 게시글에 적힌 댓글을 보기 위해서
2. 댓글 등록
	- 누가 : 회원	
	- 언제 : 댓글리스트 상단에 (댓글이 없으면 게시글 아래에)
					- 로그인이 되어있는 경우 댓글창이 화면과 등록버튼
					- 로그인이 안되어있는 경우 "로그인이 필요한 서비스 안내" 메시지
	- 무엇을 : 
					- 로그인이 되어있는 경우 댓글창이 나오고 입력 후 등록버튼 클릭
					- 로그인이 안되어있는 경우 "로그인이 필요한 서비스 안내"
					  ==> 클릭시 로그인 화면으로 전환 
	- 어떻게 : 댓글등록버튼 클릭 ==> DB 에 댓글 저장
					==> "댓글이 등록되었습니다." 메시지 출력
					==> 현재게시글에 댓글리스트 업데이트
	- 왜 : 게시글에 댓글 등록하려고
3. 댓글 수정
	- 누가 : 댓글 쓴 회원이
	- 언제 : 댓글을 클릭시
	- 무엇을 : 팝업창으로 띄어서 수정창을 보여준다
	- 어떻게 : 수정 후 수정버튼 클릭 -> DB 에 데이터 수정 -> 해당댓글이 보여지는 위치로
					돌아옵니다.
	- 왜 : 댓글을 수정하려고
4. 댓글 삭제
	- 누가 : 댓글 쓴회원, 관리자
	- 언제 : 해당 댓글의 삭제버튼 클릭시
	- 무엇을 :
				* 회원의 댓글은 회원이 로그인 했을때만 삭제버튼 생성
				* 관리자는 모든 댓글에 삭제버튼 생성
	- 어떻게 :
				* 삭제버튼 클릭하면 일반회원은 비밀번호 확인 후 삭제
				* 관리자는 삭제 물어보고 삭제
				* 삭제되면 "삭제되었습니다" 메시지 출력
				* 삭제되지 않으면 "삭제되지 않았습니다. 확인하시고 삭제하세요" 출력
				* 삭제되면 댓글리스트 새로 생성
	- 왜 : 댓글을 삭제하려고
******* Q&A 게시판 *******
1. 질문 답변 리스트
	- 누가 : 일반회원이상
	- 언제 : 메인화면에서 질문게시판 클릭시
	- 어디서 : DB의 qna table 에서
	- 무엇을 : 번호, 제목, 아이디, 작성일, 답변개수
	- 어떻게 :
				* DB에서 가져온 데이터를 리스트로 출력합니다.
				* 질문에 해당되는 내용만 가져옵니다.
				* 검색 : 제목, 내용, 아이디
				* 한페이지에 10개, 15,20,25개 옵션 추가
	- 왜 : 질문 리스트를 확인하기 위해서
2. 질문 답변 상세보기
	- 누가 : 일반회원이상
	- 언제 : 리스트에서 해당질문 클릭시
	- 어디서 : DB의 qna, member 테이블에서
	- 무엇을 : 번호, 제목, 내용, 아이디, 이름, 작성일 
					* 작성일 : YYYY-MM-DD
	- 어떻게 : DB에서 해당질문과 질문에 해당하는 답변을 모두 가져옵니다.
					* 질문의 제목과 내용을 표시하고 답변은 하단에 리스트로 보여줍니다.
3. Q&A 질문하기
	- 누가 : 일반회원
	- 언제 : 리스트에서 질문버튼 클릭시
	- 무엇을 :
				* 아이디, 이름 : 보여주기만(수정불가) 
				* 제목, 내용 : 입력할 수 있도록
				* 제목 : 한글 100자
				* 내용 : 한글 1000자
	- 어떻게 : 내용작성후 등록버튼 클릭 -> DB에 저장 -> 리스트화면으로 돌아옵니다.
				-> "질문이 등록되었습니다." 메시지 출력
4. Q&A 답변하기
	- 누가 : 일반회원
	- 언제 : 질문상세보기 화면에서 답변클릭시
	- 무엇을 :
				* 댓글처럼 등록할 수 있도록 구성
				* 제목 : 질문내용 그대로 사용
				* 내용 : 한글 1000자까지
	- 어떻게 : 내용작성후 등록버튼 클릭 -> DB에 저장 -> 질문상세보기 화면으로 돌아옴
				* 답변 리스트 새로 구성
	- 왜 : 질문에 답변을 쓰기 위해서
5. 질문 답변 수정하기
	- 누가 : 일반회원 (작성자)
	- 언제 : 질문상세보기 화면에서 수정버튼, 댓글리스트 클릭시(본인작성글만)
	- 무엇을 : 질문 (제목/내용), 답변(내용) 변경할 수 있도록 구성
	- 어떻게 : 수정내용 입력후 수정버튼 클릭 -> DB 데이터 수정
					-> "질문 (답변) 이 수정되었습니다." 메시지 출력
	- 왜 : 질문 또는 답변의 내용을 수정하기 위해서
6. 질문 삭제하기
	- 누가 : 일반회원 (작성자) / 관리자
	- 언제 : 질문상세보기화면에서 삭제버튼 클릭시
	- 무엇을 : 질문삭제 확인 팝업창을 띄웁니다.
	- 어떻게 : 
				- 일반회원 : 답변이 있을때 ---> 삭제 불가
									===> 삭제를 원하면 관리자에게 요청하세요
				         : 답변이 없으면 ---> 삭제후 --> Q&A 리스트 페이지로 갑니다.
				- 관리자 : 삭제후 -> Q&A 리스트로 갑니다.
	- 왜 : 질문을 삭제하고자 할때
7. 답변 삭제하기
	- 누가 : 일반회원 (작성자) / 관리자
	- 언제 : 질문상세보기 화면에서 답변리스트의 삭제버튼 클릭시
	- 무엇을 : 삭제확인을 위한 팝업창을 띄웁니다.
	- 어떻게 : 삭제후 -> 질문상세보기 페이지 유지 -> "답변이 삭제되었습니다" 메시지 출력
					--> 답변리스트만 새로 구성	
				
	

					
	
	 	